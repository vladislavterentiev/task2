name: Deploy task2

on:
  push:
    tags:
      - "task2-*"

permissions:
  contents: read
  packages: write

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6.5.0
        with:
          context: ./
          push: true
          tags: ghcr.io/${{ github.repository }}:task2

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          port: 22
          script: |
            echo "Авторизация в GHCR..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "Остановка и удаление старого контейнера React..."
            if [ "$(docker ps -aq -f name=task2)" ]; then
              echo "Контейнер существует. Останавливаем и удаляем..."
              docker stop task2
              docker rm task2
            else
              echo "Контейнер не найден. Пропускаем удаление."
            fi

            echo "Загрузка последнего образа React приложения..."
            docker pull ghcr.io/${{ github.repository }}:task2

            echo "Запуск нового контейнера React приложения..."
            docker run -d --name task2 \
              --network host \
              -p 1715:1715 \
              ghcr.io/${{ github.repository }}:task2